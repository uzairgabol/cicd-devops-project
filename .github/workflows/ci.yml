name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        env:
          PYTHONPATH: .
        run: pytest

      - name: Run SonarQube Scanner
        env:
          SONAR_HOST: ${{ secrets.EC2_HOST }}
          SONAR_PORT: ${{ secrets.SONAR_PORT }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          HOST_URL="http://${SONAR_HOST}:${SONAR_PORT}"
          docker run --rm \
            -e SONAR_HOST_URL="$HOST_URL" \
            -e SONAR_SCANNER_OPTS="-Dsonar.scanner.forceReloadAll=false" \
            -e SONAR_SCANNER_SKIP_JRE_PROVISIONING=true \
            -e SONAR_TOKEN="$SONAR_TOKEN" \
            -v "${{ github.workspace }}:/usr/src" \
            sonarsource/sonar-scanner-cli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and Push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Trigger Deployment
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-deployment
